
Comprehensive list of PERQ IO ports
Date compiled: 10-Nov-2016
Last updated:  28-Mar-2022

------

000:177     00:7F   Read
200:377     80:FF   write

------

Memory board (all)

  Address
oct     hex     Name            Function                            Source
145     65      VideoStatus     Read video status register          *allsysb, *canon, eioz80
146     66      --              Read bad parity address?            memadd (diagnostic)
147     67      --              Dismiss memory parity interrupt     *allsysb, kernelinit
340     E0/60   LineCount       Load line count register            iovideo
341     E1/61   ScreenAddr      Load screen bitmap address          iovideo
342     E2/62   CursorAddr      Load cursor bitmap address          iovideo
343     E3/63   VideoState      Load next video state register      iovideo, *allsysb
344     E4/64   CursorX         Load cursor x position              iovideo

------

Perq-1 IO board (IOB), or "new Z80" (CIO)

  Address
oct     hex     Name            Function                            Source
100     40      DskStat         (Dstat) disk status register        [oc]ioallsysb, ciodisk
106     46      CioZ80In        Read Z80 input                      [oc]ioallsysb, [oc]ioz80, iopas.dfs
300     C0/40   --              Old touchpad interface (unused)     schematics
301     C1/41   CioZ80Start     (Dseek, dskCntl) Z80 control        [oc]ioallsysb, [oc]ioz80, ciodisk, iopas.dfs
302     C2/42   DskHead         (Dhead) Shugart head register       [oc]ioallsysb, ciodisk
307     C7/47   CioZ80Out       Load Z80 output                     [oc]ioallsysb, [oc]ioz80, iopas.dfs
310     C8/48   CylSec          (dskCylSec) Shugart cyl/sec reg     [oc]ioallsysb, ciodisk
311     C9/49   FileL           (dskFSNlo) File sernum low bits     [oc]ioallsysb, ciodisk, boot
312     CA/4A   FileH           (dskFSNhi) File sernum hi bits      [oc]ioallsysb, ciodisk, boot
313     CB/4B   Block           (dskLBN) Shugart block #            boot, dtst, io, ciodisk
314     CC/4C   MicSecNo*       Disk sector # (CIO Microp only)     ciossysb
320     D0/50   DatAdrH         Shugart data buffer addr hi         [oc]ioallsysb
321     D1/51   CWAdrH          Shugart header buffer addr hi       [oc]ioallsysb
324     D4/54   DMAhi           Load buffer addr high 4 bits        canon
325     D5/55   HDRhi           Load header addr high 4 bits        canon
330     D8/58   DatAdrL         Shugart data buffer addr low        [oc]ioallsysb
331     D9/59   CWAdrL          Shugart header buffer addr low      [oc]ioallsysb
334     DC/5C   DMAlo           Load buffer addr low 16 bits        canon
335     DD/5D   HDRlo           Load header addr low 16 bits        canon

* Evidence that the "CIO" diverged slightly from the original IOB: in "ciosys" (SysB with updates contributed
by ICL?) implies the new Z80 protocol, and at least one extra register for the Micropolis 8" drive that wasn't
used on the original IOB.  MicZero, MicSync, MicCylin, MicHead and MicSecNo (310:314) replace CylSec, FileL/H,
and Block (310:313).  NibBus renames Dhead, too.

More mysteries!  A disassembly of "cioboot.bin" (not sure where this came from!!) shows that it has references
to six completely undocumented IOB addresses:  315..317 (0xCD..0xCF) and 350..352 (0xE8..0xEA).  These must
pre-date the EIO board, since 315..317 overlap with the EIO's "load multicast group" registers?  But this is in
the boot ROM code, not in SysB!  And the 350..352 ports are in the range that 3RCC documented as available for
user options.  So is this from a development system used for some early version of Ethernet, or netbooting?  We
may never know.

------

Perq-2 Ethernet (EIO) or non-Ethernet (NIO) IO board

  Address
oct     hex     Name            Function                            Source
120     50      FPStat          Read floating point status          fptest (diagnostic)
121     51      FPResult        Read floating point result          fptest (diagnostic)
122     52      E10ERdNetSR     Read net status register            ioe10
123     53      DskStat         (SMStat) Read disk status reg       eio{5}allsysb, eio{5}disk
124     54      EioZ80In        Dismiss Z80 interrupt               eio{5}allsysb, eioz80, iopas.dfs
125     55      EioZ80Stat      Read Z80 interface status           eioz80, iopas.dfs
132     5A      E10ERdBCLow     Read bit count low byte             ioe10
133     5B      E10ERdBCHgh     Read bit count high byte            ioe10
234     9C/5C   AdrReg*         Enable state machine addr reg       eioech (diagnostic)
235     9D/5D   WrtRam*         Load ethernet test mumble?          eioech (diagnostic)
247     A7/67   DMATest         Load DMA test register              dmabte (diagnostic)
300     C0/40   ChanSel         (E10EwrDMAChn) DMA Ch# Selector     eio{5}allsysb, eioz80, eiodisk, ioe10, canon etc
301     C1/41   FPInst          Load floating point data            fptest (diagnostic)
302     C2/42   E10EWrNetCR     Load net control register           ioe10
303     C3/43   E10EWrIntEnb    Load net interrupt enable reg       ioe10
304     C4/44   EioZ80Out       PERQ->Z80 send byte                 eio{5}allsysb, eioz80
305     C5/45   EioZ80Ctrl      Z80 control                         eio{5}allsysb, eioz80, fptest
310     C8/48   E10EWrNA0       Load net addr low word byte 6       ioe10
311     C9/49   E10EWrNA1       Load net addr low word byte 5       ioe10
312     CA/4A   E10EWrMCCmd     Load multicast command byte         ioe10
313     CB/4B   E10EWrMC0       Load multcast reg grp 0             ioe10
314     CC/4C   E10EWrMC1       Load multcast reg grp 1             ioe10
315     CD/4D   E10EWrMC2       Load multcast reg grp 2             ioe10
316     CE/4E   E10EWrMC3       Load multcast reg grp 3             ioe10
317     CF/4F   E10EWrMC4       Load multcast reg grp 4             ioe10
320     D0/50   ConstPtr        Constant register selector          eio{5}allsysb, eio{5}disk
321     D1/51   RamFile         Constant reg load and increment     eio{5}allsysb, eio{5}disk
322     D2/52   SmCtl           State machine control register      eio{5}allsysb, eio{5}disk
323     D3/53   DskCtl          Disk control register               eio{5}allsysb, eio{5}disk
324     D4/54   DmaDbLo         (E10EWrBufLo) Load buf addr lo      eio{5}allsysb, eio{5}disk, eioz80, ioe10, canon
325     D5/55   DmaDbHi         (E10EWrBufHi) Load buf addr hi      eio{5}allsysb, eio{5}disk, eioz80, ioe10, canon
326     D6/56   DmaLhLo         (E10EWrHdrLo) Load hdr addr lo      eio{5}allsysb, eio{5}disk, eioz80, ioe10, canon
327     D7/57   DmaLhHi         (E10EWrHdrHi) Load hdr addr hi      eio{5}allsysb, eio{5}disk, eioz80, ioe10, canon
330     D8/58   E10OWrBCCR      Load bit count control reg          ioe10
331     D9/59   E10OWrBCHgh     Load bit count high byte            ioe10
332     DA/5A   E10OWrBCLow     Load bit count low byte             ioe10
334     DC/5C   E10EWrUSCR      Load usec clock control             ioe10
335     DD/5D   E10EWrUSHgh     Load usec clock high byte           ioe10
336     DE/5E   E10EWrUSLow     Load usec clock low byte            ioe10
346     E6/66   *               "Put ones on the IOB"               diagnostics

* Unnamed diagnostic function?  Several files use iob(346) to "put ones on the iob" for testing;
others seem to allow poking directly at the Ethernet state machine and/or scratchpad RAM?

------

Option IO board (Canon, Ethernet, EthCan, or EthCanTape)

  Address
oct     hex     Name            Function                            Source
006     06      E10ORdBCLow     Read bit count low byte             ioe10
007     07      E10ORdBCHgh     Read bit count high byte            ioe10
010     08      IntStat         4-bit interrupt status              Canon.MicroMac
011     09      MechStat        16-bit mechanical status            Canon.MicroMac
015     0D      StrStat         Read streamer state                 tsio
016     0E      StrDataRcv      Read streamer data                  tsio
017     0F      E10ORdNetCR     Read net control register           ioe10
040     20      ReadCSR         Read link control status reg        (diagnostic)
042     22      ReadData        Read link data                      (diagnostic)
045     25      RdLnkReg        Read link prom register             (diagnostic)
204     84/04   LineCount*      Load Canon lines-per-band reg       Canon.MicroMac
204     84/04   StrDataSnd*     Load streamer data                  tsio
205     85/05   CanonCntl       5-bit Canon control port            Canon.MicroMac
206     86/06   StrControl      Load streamer control               tsio
210     88/08   E10OWrUSCR      Load usec clock control             ioe10
211     89/09   E10OWrUSHgh     Load usec clock high byte           ioe10
212     8A/0A   E10OWrUSLow     Load usec clock low byte            ioe10
214     8C/0C   E10OWrBCCR      Load bit count control reg          ioe10
215     8D/0D   E10OWrBCHgh     Load bit count high byte            ioe10
216     8E/0E   E10OWrBCLow     Load bit count low byte             ioe10
220     90/10   E10OWrNetAddr   Load net addr low word reg          ioe10
221     91/11   E10OWrMC1       Load multcast reg grp 1             ioe10
222     92/12   E10OWrMC2       Load multcast reg grp 3             ioe10
223     93/13   E10OWrMC3       Load multcast reg grp 5             ioe10
224     94/14   MargnCntl       Page margin control port            Canon.MicroMac
225     95/15   LeftMar         Blank words (left margin reg)       Canon.MicroMac
226     96/16   RightMar        Line length (right margin reg)      Canon.MicroMac
231     99/19   E10OWrNetCR     Load net control register           ioe10
241     A1/21   WriteCSR        Load link control register          (diagnostic)
243     A3/23   WriteData       Load link data                      (diagnostic)
244     A4/24   WrLnkReg        Load link register
246     A6/26   WtDummy         Load test value??
326     D6/56   E10OWrBufHi     Load buffer addr high 4 bits        ioe10
327     D7/57   E10OWrHdrHi     Load header addr high 4 bits        ioe10
336     DE/5E   E10OWrBufLo     Load buffer addr low 16 bits        ioe10
337     DF/5F   E10OWrHdrLo     Load header addr low 16 bits        ioe10
377     FF/7F   --              Dummy write?                        SIDCX, SIDCANON
 
Canon microcode supports every flavor of IOB/CIO/EIO/NIO, built (using PasMac) for each CPU type
and IO board combination.  Uses DMA setup regs 300,324:327 (new) or 324:325,334:335 (old).

Accent doesn't support the streaming QIC tape at all?  No mention of it anywhere!?  Only MLO tape?
But POS G sources Josh included make no mention either.  Hmm.  Found 'em in the F.0 STUT sources.

* Note overlap with the Canon LineCount register -- can't print while the tape is streaming?
Microcode would need some kind of interlock, like the E3/disk thing.  Sigh.

------

3Mbit Ethernet board

  Address
oct     hex     Name            Function                            Source
160     70      ioClock         Read microsecond clock              iopas.dfs
171     79      E3RdRecWdCnt    Read recv word count register       ioe3
173     7B      E3RdCSR         Read network ctrl status reg        ioe3
175     7D      E3RdXmtWdCnt    Read xmit word count register       ioe3
177     7F      E3RdNetAddr     Read network address bits           ioe3
326     D6/56   E3WrBuffHi      Load buffer addr hi 4 bits          ioe3
327     D7/57   E3WrHdrHi       Load header addr hi 4 bits          ioe3
336     DE/5E   E3WrBuffLo      Load buffer addr lo 16 bits         ioe3
337     DF/5F   E3WrHdrLo       Load header addr lo 16 bits         ioe3
370     F8/78   E3WrRecWdCnt    Load recv word count register       ioe3
372     FA/7A   E3WrCSR         Load network ctrl status reg        ioe3
374     FC/7C   E3WrXmtWdCnt    Load xmit word count register       ioe3
376     FE/7E   E3WrDly         Load start delay register           ioe3

------

Multibus/Laser Option (MLO) board

  Address
oct     hex     Name            Function                            Source
012     0A      Stat            Read status register                mbus
013     0B      Rdata           Read data                           mbus
014     0C      DskStat*        Read SMD disk status??              ndt (diagnostic)
200     80/00   Cntl            Multibus control register           mbus
201     81/01   Wdata           Load data                           mbus
202     82/02   Haddr           High 8-bit address register         mbus
203     83/03   Laddr           Low 16-bit address register         mbus
206     86/06   MbIntMask       Interrupt mask register             mbus
207     87/07   DMABase         Load dma address register           mbus
230     98/18   SmCtl*          Load SMD state control?             ndt (diagnostic)
233     9B/1B   DskCtl*         Load SMD disk control?              ndt (diagnostic)

Multibus development appears to have begun much earlier than previously known, with a rare snapshot of
the test code running on a PERQ-1 under POS F.2 (later released as the first POS G).  When the MLO was
finally released it appears that the microcode only supported the EIO (and thus PERQ-2); it uses the
EIO's DMA setup registers 300, 324:327.

* These three registers seem to imply that the MLO contained an SMD hard disk controller similar to the
EIO's 8"/5.25" implementation.  Since no schematics of the MLO seem to have survived, and the few boards
that exist do not appear to have the 2910-based disk state machine hardware, this is another source of
speculation, confusion and intrigue.  It's entirely possible that these ports were only used to develop
and debug the SA4000->DIB (Micropolis/MFM) controller without interfering with the IOB's Shugart ports,
and were never included on the MLO?

------

PERQ-2 backplane

  Address
oct     hex     Name            Function                            Source
70      38      SNByte0         Serial number low                   Frank
71      39      SNByte1         Serial number high                  Frank
72      3A      SNByte2         Third term (returns zero)           Frank
73      3B      SNByte3         Fourth term (returns 134 octal)     Frank

A PAL16L8 responds to IOA 70:77 and encodes the system serial number.  The formula for computing
the four terms is documented in Kmas.PAL.

------

IOB(0) is a special case: it only explicitly occurs in multibus/tape/micro/iorwregs.micro.  Accent
modifies the microinstruction to read or write any IO register (part of the kernel debugger).  So
this is likely just a stand-in so the microassembler won't flag an error.  The modified instruction
sets the Z field to the register to be read/written; the same trick is used to modify the X/Y fields
to read and write registers in the debugger.  Wild.

