PERQemu "experiments" branch ChangeBlog


Summary of changes on the development branch since the v0.5.0 release.  Previous
notes moved to ChangeLog-Old.txt.  New entries here will be added at the top, to
avoid wasting precious time scrolling to the end. :-)


February, 2024:
    2. The CLI "save screenshot" command works again.  The default output format
    is PNG so the compressed 1bpp screen capture is very compact.  The Canon can
    now produce multi-page TIFF files!  These (large) files can be converted to
    compressed PDFs using "tumble" as recommended for archival on Bitsavers.
    Once bugs are shaken out and a visual progress indicator is added an interim
    v0.5.5 update will be released with an updated User Guide.

    1. Canon printing is pretty solid; worked out most of the quirks of the
    print engine and controller so that the test software (on POS F.15) can
    produce output at 240- or 300-dpi reliably, in PNG or TIFF (uncompressed)
    formats.  Refactoring so that the output drivers can be used for other
    printer emulations and screenshots too!  (Yes, the bitmaps are inverted,
    for now.)


January, 2024:
    6. Holy crap, laser printing seems to work.  LOTS of testing and tweaking to
    do but I got a screendump to print and CPrint almost output a proper listing
    (though the margin is shifted improperly).  Interim check-in for pushing the
    code to other machines for testing.

    5. Hooray, Github just stopped working with my browser on El Capitan, with
    zero warning.  At least Google Docs is giving a warning that Firefox ESR 78
    is no longer supported _but the site still works_.  So now I really do have
    to finally migrate all of my crap to (at least) High Sierra on my iMac, for
    as long as that lasts.  Pointless churn FTW.  Anyone with an old PowerMac5,1
    out there who's looking to donate or trade?  Being flat broke is officially
    NO goddamned fun.

    4. Have almost worked out the arcane workings of the Canon controller and
    print engine, although it's quirky as hell and currently very spongy.  It
    seems to fool POS into thinking that the output went somewhere, so now I
    have to make SDL do something reasonable (or punt and just write the PNG
    file directly, without SDL2's stupidities and limitations in the way).
    Or I could just write a 2700 column wide x 3300 line text file to see if
    the bitmap looks like an image!

    3. Update the NullEthernet device to use the DMA registers (fixed a small
    regression that affected POS G on CIO).

    2. So, the Canon got to the point where it wanted to use the IOB DMA regs
    to set up a transfer, and it rudely reminded me that that had never been
    implemented.  Whoops.  So I went berzerk and slapped a thing together to
    handle all the DMA channels on both IOB/CIO and EIO and pulled a lot of
    duplicated code out of the Shugart, Ethernet and Canon controllers.  It's
    not pretty.  It's probably all wrong.  It's very weird.  But I'll push it
    over to the test box and run it for a few hours to see if it's stable and
    get back to the laser interface.

    1. Reverse engineered the Canon PROMs and started working through the bugs
    in the schematics and moderately horrible documentation to bring up a bare
    bones interface.  For testing, ported the software suite to POS F.15 (since
    that's the best documented source code base that I'm most familiar with)
    but it should work with POS G and Accent too.  Settings added to select
    printer model (LBP-10 or CX) and default paper size (anything you like, as
    long as it's US Letter).


December, 2023:
    2. Roll the copyright date to close out a frustrating year.  I have high
    hopes for completing PERQ-2 support in 2024, prior to the final collapse
    of civilization.  We all gotta have goals, right?

    1. Add a skeleton for starting the Canon laser printer interface.  This is
    a universal option for PERQ-1 (OIO) or PERQ-2 (OIO, MLO).


October, 2023:
    1. Minor refactoring of the Z80 Run() loop to account for EIO differences.
    Still distracted by RL and didn't want to leave uncommitted changes laying
    around.  Hope to get back to active development before year end?  Sigh.
    

August, 2023:

    1. Another tiny baby step toward EIO/PERQ-2 support: can instantiate EIO
    configs.  Incomplete/untested: RTC chip implementation; restored PERQ<->Z80
    FIFO code; PERQ-2 VT100-style keyboard mapping.  Long, long way to go...


July, 2023:

    3. Tentatively starting to explore what it will actually take to add EIO
    and PERQ 2 support.  The first hurdle is refactoring the Z80System into old
    (IOB/CIO) and new (EIO) versions.  This introduces a small performance hit
    (about 1fps or less?) but after chopping at it for a couple of hours we at
    least seem to still be able to run existing configurations.  Now there's a
    bunch of new controller chips to write and a mountain of Z80 code to comb
    through to figure out all of the EIO's mysteries and subtleties...

    2. Fix two small bugs: don't try to shut down the OIO board if one isn't
    configured; extend the PNX 1 video hack so that PNX 2 can now refresh the
    display properly.

    1. Trying to get back into the swing of things.  Small adjustment to the
    Ethernet reset code improves things a bit; still some funkiness possibly
    due to the complexity of my home network.  Anyone testing this code will
    probably find more success with two emulators talking over a private hub
    or switch with as little extra traffic as possible; much of the early PERQ
    software was extremely fragile, so a noisy modern TCP/IP network can easily
    overwhelm software from the era of "stone tools and bearskins".  The Accent
    IPAddrServer, AuthServer, Speak/Listen and FTP are communicating, while
    transparent network filesystem access is hit or miss, but this is progress.
    Still a LOT of work to make Ethernet reliable but it'll be pretty darn cool
    once it's there...


April, 2023:

    1. Radio silence - fell off the map due to financial difficulties requiring
    attention elsewhere.  Hope to return to PERQ development soon.  There is SO
    much cool stuff still being unearthed in the archives, and I really want to
    continue working on the emulator; getting EIO support in place will let me
    finish development of a real-time clock chip programming board for updating
    real PERQs (hardware is done, software TBD).  I also really don't want to
    end up bankrupt and/or homeless, so that's consuming my time for now. :-|

    If I wasn't such a cynic or had the constitution to engage in "social media"
    at any level, I'd say please visit https://buymeacoffee.com/skeezicsb...


March, 2023:

    3. WOO!  Ethernet is now ACTUALLY happening.  Still pretty raw, but packets
    are now flowing: first successful POS FTP transfer, echo test with POS
    diagnostic program "TestEther", and even Accent is sending Speak/Listen and
    Sesame (remote filesystem!) traffic.  Super early, and nowhere close to
    ready for "production", but the basic mechanism works.  So stoked.  Chuffed
    to bits.  Tickled pink.  A little bit giddy, even. :-)

    2. Provide a crude patch to map Turkish characters to UTF-8/ASCIIish so the
    CLI can parse 'i' and 'I' (in their various forms).  In the longer term,
    moving toward more awareness of and better handling of non-US/English input
    locales and (in a future GUI!) possibly even language translations would be
    great, to help spread the PERQ love globally. :-)

    1. Ethernet is kind of happening.  In the first cut, it's a purely low-level
    "raw" interface that runs in promiscuous mode so the PERQ can drive it as
    close to its own view of the hardware as possible.  This is cool, since it
    can run XNS, IPv4, and various undocumented/proprietary protocols and the
    direct packet mashing is relatively easy.  However, it requires elevated
    privileges (root/administrator) and... that ain't great.  In progress.
    

February, 2023:

    5. Real Ethernet support is taking its first baby steps!  It's still fragile
    and needs a ton of debugging.  The older versions of PacketDotNet/SharpPcap
    that work with net48 are rather out of date, but the newer versions (which
    claim to support both .NET Framework 4.8 and .NET Core apparently just lie.
    Mama said there'd be days like this.

    4. Found and fixed an esoteric microcode bug in POS F.15 and rolled that up
    with the GPIB, RSX: fixes into an "Amendment 1" release (posted with a full
    floppy set to the PERQmedia repo).  Updated the bundled f15 and f15dev.prqm
    images in Disks/.

    3. Start adding the framework for Ethernet support.  Bumped version to
    distinguish from the abortive Micropolis effort.

    2. Fixed some small bugs that allowed PNX 2 to install itself and built up
    a Shugart disk image.  However, ICL's interpretation of the video hardware
    programming produces corrupted/inconsistent display.  Once that's debugged
    and a workaround devised, a PNX 2 image will be posted to the PERQmedia
    archive.

    1. Started work on the Micropolis 8" disk driver, attempting to build and
    test support for the "CIO Micropolis" configuration.  Without source code
    to PNX or ICL's POS R.4 modifications -- and no schematics or even a clear
    description of what the "ICL CIO" board or CIOShugart/CIOMicropolis disk
    support ACTUALLY MEANS -- it has proven impossible.  There are several
    different versions of the Micropolis code that are completely at odds with
    the available documentation and the EIO way of doing things; booting from
    floppy produces different results/installs different microcode that makes
    subsequent attempts to boot from the hard drive fail.  It's basically a
    complete disaster.  There's no point in continuing to bash my head on it.
    For now this means the "CIO" board ONLY supports Shugart 14" drives and the
    8" Micropolis will ONLY be supported on the PERQ-2 and PERQ-2/T1 models as
    the EIO board is developed.  If further exploration of the available media
    yields more information about the "CIO Micropolis" interface it can be
    added in later.  Bummer.


---
Last update: skeezics    Fri Feb  9 23:45:56 PST 2024
